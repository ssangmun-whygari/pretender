<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pretender.myApp.mapper.mediaInfoMapper">
	<select id="selectAverageStars" resultType="Float">
		select avg(stars) from reviews
		where media_id = #{mediaId} and media_type = #{mediaType}
	</select>

	<select id="selectCastLikeCategory" resultType="com.pretender.myApp.model.CastLikeCategoryDTO">
		select * from cast_like_category
	</select>
	
	<select id="selCastVotes" resultType="com.pretender.myApp.model.CastVotesDTO">
		SELECT c.character_id, c.character_name, c.actor_name, count(l.character_id) as votes
		FROM cast_likes l LEFT JOIN casts c
		ON c.character_id = l.character_id
		where c.media_id = #{mediaId} and c.media_type= #{type}
		GROUP BY c.character_id, c.character_name, c.actor_name
		ORDER BY votes DESC
	</select>
	
	<select id="selVoteReasons" resultType="com.pretender.myApp.model.VoteReasonsDTO">
		SELECT y.content, count(l.why) as votes
		FROM cast_likes l LEFT JOIN cast_like_category y
		ON l.why = y.why
		WHERE l.media_id = #{mediaId} AND l.media_type= #{type} AND l.character_id =#{characterId}
		GROUP BY l.character_id, l.why
		ORDER BY votes DESC
	</select>
	
	<select id="selectAiSummary" resultType="com.pretender.myApp.model.AISummaryDTO">
		select work_id as workId, 
			one_point as onePoint, 
			category1, category2, category3, category5, category6, media_type
		from ai_summary
		where work_id = #{mediaId} and media_type = #{type}
	</select>
	
	<select id="selectAiSummaryCategory" resultType="com.pretender.myApp.model.AISummaryCategoryDTO">
		select category_number as categoryNumber, category
		from ai_summary_category
	</select>
	
	<select id="selectAiSummaryProvidedList" resultType="String">
		select work_id from ai_summary
	</select>
	
	<select id="selectDetailForAiSummaryProvidedList" resultType="map">
		select work_id as mediaId, poster_path as posterPath, work_title as title 
		from ai_summary
		where work_id in
		<foreach item="item" collection="list" open="(" separator="," close=")">
		    #{item}
		</foreach>
	</select>
</mapper>
