<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pretender.myApp.mapper.membersMapper">

   <select id="countById" resultType="int">
        select count(*) from members 
        where id = #{id}
    </select>
    
    <select id="countByNickname" resultType="int">
    	select count(*) from members 
    	where nickname = #{nickname}
    </select>
    
     <!-- 회원 정보 삽입 -->
    <insert id="insertUser">
        INSERT INTO members (id, password, nickname, birthday, gender, status)
        VALUES (#{id}, #{password}, #{nickname}, #{birthday}, #{gender}, #{status})
    </insert>
  
    <select id="findUserByUsername" parameterType="string" resultType="com.pretender.myApp.model.PretenderUserDetails">
    	select id as username,
    	password,
    	case
    		when status = 'active'
    		then true
    		else false
    	end as enabled,
    	case
    		when is_admin = '0'
    		then false
    		when is_admin = '1'
    		then true
    	end as isAdmin
    	from members
    	where id = #{username}
    </select>
    
    <update id="updateProfileImageName">
    	update members
    	set image = #{fileName}
    	where id = #{memberId}
    </update>
    
    <select id="selectProfileImageName" resultType="String">
		select image from members where id = #{memberId}
	</select>
	
	<select id="selectMyActivities" resultType="com.pretender.myApp.model.MyActivitiesDTO">
		select distinct  
		c.media_title as mediaTitle, 
		r.content, 
		r.post_date as postDate, 
		r.correct_date as correctDate , 
		r.is_deleted as isDeleted,
		r.media_id as mediaId,
		r.media_type as mediaType,
		r.no,
		r.parent_no as parentNo
		from reviews r join collections c on r.media_id = c.media_id and r.media_type = c.media_type
		where r.members_id = #{userId}
		order By r.post_date desc
		LIMIT #{startNo}, #{size}
	</select>
	
	<select id="countMyActivities" resultType="int">
		select count(*) from reviews where members_id = #{userId}
	</select>
	
	<select id="searchMyActvt" resultType="com.pretender.myApp.model.MyActivitiesDTO">
		select distinct  
		c.media_title as mediaTitle, 
		r.content, 
		r.post_date as postDate, 
		r.correct_date as correctDate, 
		r.is_deleted as isDeleted,
		r.media_id as mediaId,
		r.media_type as mediaType,
		r.no,
		r.parent_no as parentNo
		from reviews r join collections c on r.media_id = c.media_id and r.media_type = c.media_type
		where r.members_id = #{userId} 
        AND REPLACE(c.media_title, ' ', '') LIKE REPLACE(CONCAT('%',#{word},'%'), ' ', '')
		order By r.post_date desc
		LIMIT #{startNo}, #{size}
	</select>
	
	<select id="countSearchRst" resultType="int">
		select count(distinct r.no)  
		from reviews r join collections c on r.media_id = c.media_id and r.media_type = c.media_type
		where r.members_id = #{userId}
        AND REPLACE(c.media_title, ' ', '') LIKE REPLACE(CONCAT('%',#{word},'%'), ' ', '')
	</select>

	
	</mapper>